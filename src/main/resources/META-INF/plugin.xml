<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin require-restart="true">
    <id>com.en_circle.slt.plugin</id>

    <name>Slt</name>

    <vendor email="admin@en-circle.com" url="https://www.en-circle.com">En-circle</vendor>

    <description>Slt is a language plugin bringing in the Common Lisp into Jetbrains IDE lineup.</description>

    <depends>com.intellij.modules.platform</depends>

    <resource-bundle>messages.SltBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">

        <!-- SDK Configuration -->
        <applicationService
                serviceImplementation="com.en_circle.slt.plugin.sdk.SdkList" />

        <applicationConfigurable groupId="language"
                                 instance="com.en_circle.slt.plugin.ui.sdk.SdkConfigurer"/>

        <projectService
                serviceImplementation="com.en_circle.slt.plugin.sdk.LispProjectSdk" />

        <projectConfigurable groupId="language"
                             instance="com.en_circle.slt.plugin.ui.sdk.SdkSelector"/>

        <!-- Indentation Configuration -->

        <applicationService
                serviceImplementation="com.en_circle.slt.plugin.indentation.SltIndentationSettings" />

        <applicationConfigurable groupId="editor"
                                 instance="com.en_circle.slt.plugin.ui.indentation.SltIndentationConfiguration"/>

        <projectService
                serviceImplementation="com.en_circle.slt.plugin.indentation.SltProjectIndentationSettings" />

        <projectConfigurable groupId="editor"
                                 instance="com.en_circle.slt.plugin.ui.indentation.SltProjectIndentationConfiguration"/>

        <applicationService serviceImplementation="com.en_circle.slt.plugin.ui.SltGlobalUIService" />

        <projectService serviceImplementation="com.en_circle.slt.plugin.ui.SltUIService" />

        <!-- Lisp Service -->
        <projectService serviceImplementation="com.en_circle.slt.plugin.services.lisp.LispEnvironmentServiceImpl"
                            serviceInterface="com.en_circle.slt.plugin.services.lisp.LispEnvironmentService" />

        <!-- SLT Service -->
        <projectService serviceImplementation="com.en_circle.slt.plugin.services.SltProjectService" />

        <!-- Templates -->

        <internalFileTemplate name="Common Lisp CL File.cl"/>
        <internalFileTemplate name="Common Lisp Lisp File.lisp"/>
        <internalFileTemplate name="Asdf System.asd"/>

        <fileType
                name="Common Lisp" language="Common Lisp" extensions="cl;lisp;asdf;asd"
                fieldName="INSTANCE"
                implementationClass="com.en_circle.slt.plugin.SltCommonLispFileType"/>

        <!-- Language configuration -->

        <lang.commenter language="Common Lisp"
                        implementationClass="com.en_circle.slt.plugin.SltCommenter"/>

        <lang.parserDefinition language="Common Lisp"
                               implementationClass="com.en_circle.slt.plugin.SltCommonLispParserDefinition"/>

        <lang.documentationProvider language="Common Lisp"
                                    implementationClass="com.en_circle.slt.plugin.SltDocumentationProvider"/>

        <toolWindow factoryClass="com.en_circle.slt.plugin.SltMainBarToolWindowFactory" id="Common Lisp"
                    anchor="bottom" icon="/icons/fileicon.svg" />

        <toolWindow factoryClass="com.en_circle.slt.plugin.SltSideBarToolWindowFactory" id="CLHS and Inspector"
                    anchor="right" icon="/icons/fileicon.svg" />

        <lang.syntaxHighlighter language="Common Lisp"
                                implementationClass="com.en_circle.slt.plugin.highlights.SltStaticHighlighter"/>

        <colorSettingsPage implementation="com.en_circle.slt.plugin.highlights.SltColorSettingsPage"/>

        <lang.syntaxHighlighterFactory language="Common Lisp"
                                       implementationClass="com.en_circle.slt.plugin.highlights.SltStaticHighlighterFactory"/>

        <psi.referenceContributor language="Common Lisp"
                                  implementation="com.en_circle.slt.plugin.references.SltReferenceContributor"/>

        <lang.elementManipulator forClass="com.en_circle.slt.plugin.lisp.psi.LispSymbol"
                                 implementationClass="com.en_circle.slt.plugin.references.SltSymbolManipulator"/>

        <completion.contributor language="Common Lisp"
                                implementationClass="com.en_circle.slt.plugin.SltCompletionContributor"/>

        <postStartupActivity implementation="com.en_circle.slt.plugin.highlights.SltBraceHighlighter"
                             id="SLT_BRACE_MATCHER" />

        <statusBarWidgetFactory id="Common Lisp"
                                implementation="com.en_circle.slt.plugin.SltStatusBarWidgetFactory"/>

        <enterHandlerDelegate implementation="com.en_circle.slt.plugin.indentation.SltIndentator"/>

        <codeInsight.parameterInfo language="Common Lisp"
                                   implementationClass="com.en_circle.slt.plugin.params.SltParameterInfoHandler" />

        <xdebugger.breakpointType implementation="com.en_circle.slt.plugin.ui.debug.SltSymbolBreakpointType"/>

        <spellchecker.support language="Common Lisp"
                              implementationClass="com.en_circle.slt.plugin.SltSpellCheckingStrategy"/>

        <lang.foldingBuilder language="Common Lisp"
                             implementationClass="com.en_circle.slt.plugin.SltFoldingBuilder"/>

        <externalAnnotator language="Common Lisp"
                           implementationClass="com.en_circle.slt.plugin.highlights.annotators.SymbolAnnotator"/>

        <annotator language="Common Lisp"
                   implementationClass="com.en_circle.slt.plugin.highlights.annotators.StaticHighlightAnnotator"/>

        <annotator language="Common Lisp"
                   implementationClass="com.en_circle.slt.plugin.highlights.annotators.QuoteAnnotator"/>

        <externalAnnotator language="Common Lisp"
                   implementationClass="com.en_circle.slt.plugin.highlights.annotators.RainbowAnnotator"/>

        <gotoClassContributor implementation="com.en_circle.slt.plugin.contributors.SltClassContributor"/>

        <gotoSymbolContributor implementation="com.en_circle.slt.plugin.contributors.SltSymbolContributor"/>

        <lang.psiStructureViewFactory language="Common Lisp"
                                      implementationClass="com.en_circle.slt.plugin.SltStructureViewExtension"/>

        <navbar implementation="com.en_circle.slt.plugin.SltStructureAwareNavbar"/>

        <completion.plainTextSymbol language="Common Lisp"
                                    implementationClass="com.en_circle.slt.plugin.SltPlainTextSymbolCompletionContributor"/>

        <additionalTextAttributes scheme="Default" file="colorSchemes/SLT.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/SLTDarcula.xml"/>

        <postStartupActivity implementation="com.en_circle.slt.plugin.SltProjectActivity"/>
    </extensions>

    <actions resource-bundle="messages.SltBundle">
        <group id="slt.actions.macroexpand.group"
               class="com.en_circle.slt.plugin.actions.MacroexpandGroup"
               icon="/icons/fileicon.svg"
               popup="true">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </group>

        <action id="slt.actions.macroexpand.all"
                class="com.en_circle.slt.plugin.actions.MacroexpandAllAction">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift E"/>
            <add-to-group group-id="slt.actions.macroexpand.group" anchor="last"/>
        </action>

        <action id="slt.actions.macroexpand.one"
                class="com.en_circle.slt.plugin.actions.Macroexpand1Action">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift R"/>
            <add-to-group group-id="slt.actions.macroexpand.group" anchor="last"/>
        </action>

        <action id="slt.actions.macroexpand.normal"
                class="com.en_circle.slt.plugin.actions.MacroexpandAction">
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift F"/>
            <add-to-group group-id="slt.actions.macroexpand.group" anchor="last"/>
        </action>

        <action id="slt.actions.eval.toplevel"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.EvalTopLevelAction">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.macroexpand.group" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt A"/>
        </action>

        <action id="slt.actions.eval.region"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.EvalRegionAction">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.eval.toplevel" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt R"/>
        </action>

        <action id="slt.actions.eval.current"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.EvalCurrentFormAction">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.eval.region" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt F"/>
        </action>

        <action id="slt.actions.eval.previous"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.EvalPreviousFormAction">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.eval.current" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt E"/>
        </action>

        <action id="slt.actions.eval.next"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.EvalNextFormAction">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.eval.previous" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt Q"/>
        </action>

        <action id="slt.actions.eval.file.editor"
                icon="/icons/evalFile.svg"
                class="com.en_circle.slt.plugin.actions.EvalFileFromEditor">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.eval.next" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt T"/>
        </action>

        <action id="slt.actions.clhs.open"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.OpenCLHSAction">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="slt.actions.eval.file.editor" />
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt H"/>
        </action>

        <action id="slt.actions.eval.file"
                icon="/icons/evalFile.svg"
                class="com.en_circle.slt.plugin.actions.EvalFile">
            <add-to-group group-id="ProjectViewPopupMenuRunGroup" anchor="last"/>
        </action>

        <!-- Refactor actions -->
        <action id="slt.actions.refactor.extract"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.refactor.ExtractFunctionLambdaAction">
            <add-to-group group-id="RefactoringMenu" anchor="last"/>
        </action>

        <action id="slt.actions.refactor.renamesymbol"
                icon="/icons/fileicon.svg"
                class="com.en_circle.slt.plugin.actions.refactor.RenameSymbolAction">
            <add-to-group group-id="RefactoringMenu" anchor="last"/>
        </action>

        <!-- Swank actions -->
        <group id="slt.actions.swank.group"
               class="com.en_circle.slt.plugin.actions.swank.SwankGroup"
               icon="/icons/swank.svg"
               popup="true">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </group>

        <action id="slt.actions.swank.disassemble"
                icon="/icons/swank.svg"
                class="com.en_circle.slt.plugin.actions.swank.DisassembleAction">
            <add-to-group group-id="slt.actions.swank.group" anchor="last"/>
        </action>

        <action id="slt.actions.swank.undefinefunction"
                icon="/icons/swank.svg"
                class="com.en_circle.slt.plugin.actions.swank.UndefineFunctionAction">
            <add-to-group group-id="slt.actions.swank.group" anchor="last"/>
        </action>

        <action id="slt.actions.swank.uninternsymbol"
                icon="/icons/swank.svg"
                class="com.en_circle.slt.plugin.actions.swank.UninternSymbolAction">
            <add-to-group group-id="slt.actions.swank.group" anchor="last"/>
        </action>

        <action id="slt.actions.swank.reevaluatedefvar"
                icon="/icons/swank.svg"
                class="com.en_circle.slt.plugin.actions.swank.ReevaluateDefvarAction">
            <add-to-group group-id="slt.actions.swank.group" anchor="last"/>
        </action>
    </actions>

    <projectListeners>
        <listener class="com.en_circle.slt.plugin.ui.debug.SltBreakpointListener"
                  topic="com.intellij.xdebugger.breakpoints.XBreakpointListener" />
    </projectListeners>

    <change-notes><![CDATA[
<p>0.5.3 Changes and fixes:</p><br />
<p>Fixed build for new version</p><br />
<p>0.5.2 New features:</p><br />
<p>Refactor - extract lambda to function</p><br />
<p>Refactor - rename symbol</p><br />
<p>Swank action - disassemble</p><br />
<p>Swank action - undefine function</p><br />
<p>Swank action - unintern symbol function</p><br />
<p>Swank action - reevalute defvar</p><br />
<br />
<p>0.5.2 Changes and fixes:</p><br />
<p>Fixed indentation issues</p><br />
<p>Fixed symbol parsing - |123| reported as number</p><br />
<p>Fixed #88, #83</p><br />
<br />
See CHANGELOG.md for more details
]]></change-notes>
</idea-plugin>